@keyframes jiggle {
  0% {
    transform: rotate(0deg);
  }
  33% {
    transform: rotate(5deg);
  }
  66% {
    transform: rotate(-2.5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
@keyframes jump {
  0% {
    transform: translateY(0%);
  }
  33% {
    transform: translateY(-5%);
  }
  66% {
    transform: translateY(1.25%);
  }
  100% {
    transform: translateY(0%);
  }
}
@keyframes scale-in {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.face-container {
  position: sticky;
  top: 0;
  @include breakpoint(lg) {
    min-height: 100vh;
  }
  // display: flex;
  flex-direction: column;
  // justify-content: center;
}

.face {
  pointer-events: auto;
  border-radius: $border-radius__face;
  overflow: hidden;
  box-shadow: $box-shadow__face;

  svg#face-svg {
    width: 100%;
    height: auto;
    display: block;
    position: relative;

    > * {
      transition: $transition--short;
    }

    #foreground > * {
      cursor: grab;

      &.hover {
        > path {
          opacity: 0.6;
        }
      }

      &.dragging {
        cursor: grabbing;
        > path {
          opacity: 0.6;
        }
      }
    }
  }

  &.jiggle {
    animation: jiggle 0.25s;
  }

  &.jump {
    animation: jump 0.25s;
  }
}

.face-history {
  position: absolute;
  margin-top: calc(50vh + 100% / 2);
  top: $gutter-size/2;
  left: 0;
  right: 0;
  display: flex;
  gap: $gutter-size/2;
  z-index: 1;

  &__item {
    width: calc((100% - $gutter-size/2 * 4) / 5);
    display: flex;
    // overflow: hidden;
    transition: transform 0.15s ease-in-out, opacity 0.15s ease-in-out;

    > svg {
      width: 100%;
      height: auto;
      display: inline-block;
      border-radius: $border-radius__face--small;
      box-shadow: $box-shadow__face;
      transition: box-shadow 0.15s ease-in-out;
    }

    &:not(.removing) > svg {
      animation: scale-in 0.25s ease-in-out forwards;
    }

    &.removing > svg {
      z-index: -1;
      animation: scale-in 0.25s ease-in-out reverse forwards;
    }

    @for $n from 2 through 5 {
      &:nth-child(#{$n}) {
        opacity: 1 - (0.1 * ($n - 1));
      }
    }
    &:nth-child(n + 6) {
      opacity: 0.5;
    }

    @include hover-focus {
      opacity: 1;
      cursor: pointer;
      transform: scale(1.05);
      > svg {
        box-shadow: $box-shadow__face--close;
      }
    }
  }
}
